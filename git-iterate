#!/bin/bash

# Iterate over all the commits in the current branch of a repo
# This script should be placed and run from outside the repo
# Usage: ./git-iterate <repo-path> <output-file>
#
# repo-path:     relative path to dir of repo
# output-file:   output file to redirect results to
#
# E.g.: ./git-iterate ./testrepo ./output.txt
#       Would run the script on a repo named testrepo and
#       output the results to a file called output.txt

if [[ $# -ne 2 ]]; then
    echo "usage: ./git-iterate <repo-path> <output-file>"
    exit 2
fi

TEMP_DIR=temp-work-dir

# create a new work dir/tree based on the repo's HEAD, in the same dir as the script
# this also creates and checks out a new branch with the same name as the work dir/tree
# this stuff is FOR SAFETY!!!
git --git-dir=$1/.git worktree add $TEMP_DIR

# get a list of all commits, omitting merges
COMMITS=$(git -C $TEMP_DIR rev-list --no-merges --reverse HEAD)

for COMMIT in $COMMITS
do
    # checkout the commit
    git -C $TEMP_DIR checkout -q $COMMIT

    # collect the commit metadata
    git -C $TEMP_DIR log -n 1 --pretty=format:"Commit: %H%nAuthor: %an <%ae>%nDate:   %ad%n%n" | tee -a $2

    # check that there are any test files to run
    TEST_COUNT=$(find $TEMP_DIR -not -path '*/node_modules/*' -type f \( -name '*.test.js' -o -name '*.spec.ts' \) | wc -l)
    if [[ $TEST_COUNT -ne 0 ]]; then
        # run any scripts that need to be run on tests in here
        # NOTE: these scripts might need arg $TEMP_DIR as well, since that's the work dir with the files
        
        # output test coverage of commit to file
        bash ./get-coverage $TEMP_DIR 2>&1 | tee -a $2
    
        # clean up the files back to the original commit state before switching
        git -C $TEMP_DIR checkout -q .
    else
        # output that this commit had no tests to file
        echo "This commit has no tests" | tee -a $2
    fi
done

# clean up the temporary work dir/tree and branch
git -C $1 worktree remove $TEMP_DIR
git -C $1 branch -D $TEMP_DIR

awk -f coverage-parser.awk $2 >> ./data/raw/coverage-data.csv
awk -f format.awk ./data/raw/coverage-data.csv >> ./data/coverage.csv